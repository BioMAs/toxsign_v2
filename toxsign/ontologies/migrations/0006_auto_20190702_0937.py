# Generated by Django 2.0.13 on 2019-07-02 09:37

from django.db import migrations

import csv
import os
import time

def import_data(apps, schema_editor):
    if os.getenv("ONTOLOGY_DATA_FILE"):
        # Cleanup
        file = os.getenv("ONTOLOGY_DATA_FILE").replace('"','').replace("'",'')
        if os.path.isfile(file):
            Biological = apps.get_model('ontologies', 'Biological')
            completed = False
            obsoletes = []
            start = time.time()
            treated_ontologies = {}
            while not completed:
                skipped = []
                total = 0
                added = 0
                with open(file, 'r') as line:
                    tsv = csv.reader(line, delimiter='\t')
                    for row in tsv:
                        total += 1
                        # Weird case: ancestors but no parents -> Skip and log
                        if row[5] and not row[4]:
                            if row[0] not in obsoletes:
                                obsoletes.append(row[0])
                                added +=1
                        # If not parent and not treated, insert row
                        elif row[0] not in treated_ontologies and not row[4]:
                            id = insert_data(Biological, row, treated_ontologies)
                            treated_ontologies[row[0]] = id
                            added += 1
                        # If parent & parent was treated
                        elif row[0] not in treated_ontologies and parents_treated(row, treated_ontologies):
                            id = insert_data(Biological, row, treated_ontologies)
                            treated_ontologies[row[0]] = id
                            added += 1
                        elif row[0] not in treated_ontologies:
                            skipped.append(row[0])
                    if added == 0:
                        # Nothing was added. Perhaps some issue in the file. Break
                        print("Breaking because nothing was added")
                        completed = True
                    # If we treated everything, break out
                    if len(treated_ontologies) == total:
                        completed = True
            stop = time.time()
            print("{} rows inserted in {}s. {} skipped (obsoletes). {} skipped (malformed?)".format(len(treated_ontologies), stop-start, len(obsoletes), len(skipped)))
            if obsoletes:
                print("Obsoletes IDs")
                for obs in obsoletes:
                    print(obs)
            if skipped:
                print("Malformed(?) IDs")
                for mal in skipped:
                    print(mal)
        else:
            print("The file {} was not found. Ignoring migration".format(os.getenv("ONTOLOGY_DATA_FILE")))
    else:
        print("No ONTOLOGY_DATA_FILE variable set. Skipping migration")

def insert_data(model, row, treated_ontologies):
    try:
        object = model.objects.create(onto_id=row[0], name=row[2], synonyms=row[3])
        if row[4]:
            parent = [treated_ontologies[name] for name in row[4].split("|")]
            object.as_parent.set(parent)
        if row[5]:
            ancestors = [treated_ontologies[name] for name in row[5].split("|")]
            object.as_ancestor.set(ancestors)
        return object.id
    except Exception as e:
        raise Exception(" ".join(row))
        
def parents_treated(row, treated_ontologies):
    if row[4]:
        parents = row[4].split("|")
        return all([parent in treated_ontologies for parent in parents])
    else:
        return True



class Migration(migrations.Migration):

    dependencies = [
        ('ontologies', '0005_auto_20190529_1039'),
    ]

    operations = [
	migrations.RunPython(import_data),
    ]


